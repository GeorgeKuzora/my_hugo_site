1 Вступление
2 Описание проекта
2.1 Цель проекта
2.2 Структура проекта
2.3.1 Backend репозиторий проекта
2.4.2 Frontend репозиторий проекта
2.5 Технологии и инструменты
3 Подготовка окружения для разработки приложения
3.1 Выбор операционной системы для работы приложения
3.2 Установка Linux для разработки и тестирования приложения
3.3 Установка Python при помощи pyenv
3.4 Установка Poetry
3.5 Установка редактора
4 Создание проекта
4.1 Создание проекта при помощи Poetry
4.2 Управление зависимостями
4.3 Дополнительных инструменты для редактирования кода
4.4.1 Языковой сервер и статический анализатор кода Pyright
4.5.2 Линтер Flake8
4.6.3 Форматер Black
4.7 Установка зависимостей в проект
4.8 Запуск виртуального окружения Poetry
5 Работа над проектом
5.1 Выбор Django в качестве фреймворка для проекта
5.2 Структура проекта Django
5.3 Приложения Django
5.3.1 Структура Django и pyproject.toml
5.4 Структура данных проекта
5.4.1 Структура
5.4.2 Базовые модели проекта
5.4.2.1 User (CustomUser)
5.4.2.2 Company
5.4.2.3 Autoservice
5.4.2.4 Geolocation
5.4.2.5 City
5.4.2.6 GeolocationCity
5.4.2.7 WorkingTime
5.4.2.8 Transport
5.4.2.9 Jobs
5.4.2.10 Order
5.4.2.11 OrderImages
5.4.2.12 Feedback
5.# API проекта.
5.## Что такое REST API
5.## Описание API проекта
5.# API документация
5.## Django Rest Framework Self describing APIs
5.## SwaggerUI
5.## ReDoc
5.# Djoser - пользователи и аутентификация
5.## Система аутентификации Django
5.## Система аутентификации Django Rest Framework
5.## Библиотека Djoser
5.# Приложения проекта
5.## Приложение Users
5.## Приложение Autoservice
5.## Приложение Order
6 Тестирование и отладка проекта
## Тестирование
## Тестовый фреймворк django
### Структура тестов в Django
### Пример тестирования при помощи django.tests
## Тестирование API
### Обзор
### Docker контейнер для тестирования API
### Требования к Docker контейнеру
### Dockerfile
### Описание Dockerfile
#### BASE
#### STAGING
#### DEVELOPMENT
### Docker compose файлы
### Файл docker-compose.dev.yml
### Подготовка среды для запуска development контейнера
#### Клонирование репозитория
#### Установить Docker на локальный компьютер
#### Создать файл .env
### Сборка и первый запуск контейнера
### Работа с контейнером
#### Миграция базы данных
#### Создание суперпользователя
#### Запуск, перезапуск и остановка контейнера
### Тестирование API с использованием Docker контейнера
#### Переменные окружения
#### Запросы
#### Ответы
7 Развертывание проекта на сервере
## Как происходит развертывание проекта
## Выбор сервера
## Docker контейнер для запуска приложения на сервере
## Dockerfile для приложения в продакшн
### Этап build
### Этап production
### Файл docker-compose.production.yml
## GitHub actions CI-CD pipeline
8 Итоги работы над проектом
## Результаты работы над проектом
### Общие выводы
### Что было реализовано в проекте
### Что пока не реализовано в проекте
## Полученные знания и опыт
9 Приложения
## Где искать проект
## Использованные материалы
